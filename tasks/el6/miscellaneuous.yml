---
- name: Install screen
  package:
    name: screen
    state: installed
  when: security_screen == True

- name: Install openswan
  package:
    name: openswan
    state: installed
  when: security_openswan

- name: Configure the login banner
  template:
    dest: /etc/issue
    src: templates/common/issue.j2
  when: security_login_banner == True

- name: Disable kdump service
  service:
    name: kdump
    state: "{{ chroot.stdout | bool | ternary(omit, 'stopped') }}"
    enabled: False
  failed_when: False
  when: security_disable_kdump == True

- name: Disable atd service
  service:
    name: atd
    state: "{{ chroot.stdout | bool | ternary(omit, 'stopped') }}"
    enabled: False
  failed_when: False
  when: security_disable_atd == True

- name: Disable abrtd service
  service:
    name: abrtd
    state: "{{ chroot.stdout | bool | ternary(omit, 'stopped') }}"
    enabled: False
  failed_when: False
  when: security_disable_abrtd == True

- name: Enable cron service
  service:
    name: crond
    state: "{{ chroot.stdout | bool | ternary(omit, 'started') }}"
    enabled: True
  when: security_disable_cron == False

- name: Disable prelinking
  lineinfile:
    create: True
    path: /etc/sysconfig/prelink
    regexp: '^PRELINKING='
    line: 'PRELINKING=no'
  when: security_disable_prelinking == True

- name: Enable SELinux
  selinux:
    state: enforcing
    policy: targeted
  when: security_selinux_configure == True

- name: Prevent unrestricted mail relaying
  lineinfile:
    path: /etc/postfix/main.cf
    regexp: '^smtpd_client_restrictions'
    line: 'smtpd_client_restrictions = permit_my_networks,reject'
  when: security_postfix_restrict_relaying == True

- name: Set system default umask
  replace:
    path: "/etc/{{ item }}"
    regexp: 'umask (\d*)'
    replace: "umask {{ security_default_umask }}"
  with_items:
    - csh.cshrc
    - bashrc
    - profile

- name: Enable smb client signing
  lineinfile:
    path: /etc/samba/smb.conf
    regexp: '^\s\+client signing'
    line: '       client signing = mandatory'
  failed_when: False

- name: Disable core dumps
  lineinfile:
    path: /etc/security/limits.conf
    regexp: '^\* hard core'
    line: '* hard core 0'
  when: security_core_dump_disable == True

- name: Disable interactive boot
  lineinfile:
    path: /etc/sysconfig/init
    regexp: '^PROMPT'
    line: 'PROMPT=no'
  when: security_interactive_boot_disable == True
